{"version":3,"sources":["xor.js","bytehandler.js","hack.js"],"names":["module","exports","input","key","output","tex","splitex","split","splitted","forEach","s","push","parseInt","ess","splittedkey","bytelenght","length","ned","news","currents","come","join","getBytes","i","charCodeAt","toString","document","getElementById","value","onclick","values","vaby","keys","console","log","complete","compile","ints","endd","innerHTML"],"mappings":";AAAAA,OAAOC,QAAU,SAAUC,EAAOC,GAcvBC,OAZO,IAAVF,GAAuB,IAARC,EACN,EAEM,IAAVD,GAAuB,IAARC,EACX,EAEM,IAAVD,GAAuB,IAARC,EACX,EAGA;;ACVjB,aAFA,IAAA,EAAA,EAAA,QAAA,aAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAH,OAAOC,QAAQ,SAACI,EAAKF,GACXG,IAAAA,EAAQD,EAAIE,MAAM,IACpBC,EAAS,GACbF,EAAQG,QAAQ,SAAAC,GACZF,EAASG,KAAKC,SAASF,MAErBG,IAAAA,EAAIV,EAAII,MAAM,IAChBO,EAAY,GAChBD,EAAIJ,QAAQ,SAAAC,GACRI,EAAYH,KAAKC,SAASF,MAOxBK,IALAA,IAAAA,EAAaT,EAAQU,OACvBC,EAAI,EACJC,EAAK,EACLC,EAAS,KACTC,EAAK,GACHL,GAAYE,GAED,OADbE,GAAS,EAAIX,EAAAA,SAAAA,EAASS,GAAKH,EAAYI,MAGnCE,EAAKT,KAAKQ,GAEdF,IACGC,EAAKJ,EAAYE,OAChBE,IAEHA,EAAK,EAGHE,OAAAA,EAAKC,KAAK;;ACrBrB,aAVA,IAAA,EAAA,EAAA,QAAA,qBAUA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPA,SAASC,EAASpB,GAEX,IADDE,IAAAA,EAAO,GACFmB,EAAI,EAAGA,EAAIrB,EAAMc,OAAQO,IAC9BnB,GAAUF,EAAMqB,GAAGC,WAAW,GAAGC,SAAS,GAAK,IAE5CrB,OAAAA,EAPTsB,SAASC,eAAe,aAAaC,MAAM,GAC3CF,SAASC,eAAe,WAAWC,MAAM,GAQzCF,SAASC,eAAe,QAAQE,QAAQ,WACjCC,IAAAA,EAAOJ,SAASC,eAAe,aAAaC,MAC5CzB,EAAIuB,SAASC,eAAe,WAAWC,MACvCG,EAAKT,EAASQ,GACdE,EAAKV,EAASnB,GACpB8B,QAAQC,IAAIH,EAAK,OAAOC,GAClBG,IACAC,GADS,EAAKL,EAAAA,SAAAA,EAAMC,GACHzB,MAAM,IACzB8B,EAAK,EACLC,EAAK,GACTF,EAAQ3B,QAAQ,SAAAC,GACf4B,GAAM5B,EACI,IAAP2B,GAAUA,EAAK,EAAEC,GAAM,QAAYD,MAEvCX,SAASC,eAAe,UAAUY,UAAUD","file":"hack.538f7c56.js","sourceRoot":"..","sourcesContent":["module.exports = function (input, key) {\r\n    var output;\r\n    if (input === 1 && key === 1) {\r\n        output = 0;\r\n    }\r\n    else if (input === 0 && key === 1) {\r\n        output = 1;\r\n    }\r\n    else if (input === 1 && key === 0) {\r\n        output = 1;\r\n    }\r\n    else {\r\n        output = null;\r\n    }\r\n    return output;\r\n};\r\n","import xor from \"./xor.js\";\r\n\r\nmodule.exports=(tex, key)=>{\r\n    const splitex=tex.split(\"\");\r\n    let splitted=[];\r\n    splitex.forEach(s=>{\r\n        splitted.push(parseInt(s));\r\n    });\r\n    const ess=key.split(\"\");\r\n    let splittedkey=[];\r\n    ess.forEach(s=>{\r\n        splittedkey.push(parseInt(s));\r\n    });\r\n    const bytelenght = splitex.length;\r\n    let ned=0;\r\n    let news=0;\r\n    let currents=null;\r\n    let come=[];\r\n    while(bytelenght>=ned){\r\n        currents=xor(splitted[ned],splittedkey[news]);\r\n        if(currents==null){\r\n        }else{\r\n            come.push(currents);\r\n        }\r\n        ned++;\r\n        if(news<splittedkey.length){\r\n            news++;\r\n        }else{\r\n        \tnews=0;\r\n        }\r\n    }\r\n    return come.join(\"\");\r\n}","import byte from \"./bytehandler.js\";\r\ndocument.getElementById(\"inputtype\").value=\"\";\r\ndocument.getElementById(\"keyring\").value=\"\";\r\nfunction getBytes(input){\r\n  var output=\"\";\r\n  for (var i = 0; i < input.length; i++) {\r\n      output += input[i].charCodeAt(0).toString(2) + \" \";\r\n  }\r\n  return output;\r\n}\r\ndocument.getElementById('runs').onclick=()=>{\r\n\tconst values=document.getElementById(\"inputtype\").value;\r\n\tconst key=document.getElementById(\"keyring\").value;\r\n\tconst vaby=getBytes(values);\r\n\tconst keys=getBytes(key);\r\n\tconsole.log(vaby+\"\\n\\n\"+keys);\r\n\tconst complete=byte(vaby, keys);\r\n\tconst compile=complete.split(\"\");\r\n\tlet ints=0;\r\n\tlet endd=\"\";\r\n\tcompile.forEach(s=>{\r\n\t\tendd+=s;\r\n\t\tif(ints===7){ints=0;endd+=\"<br>\"}else{ints++;}\r\n\t});\r\n\tdocument.getElementById(\"outpus\").innerHTML=endd\r\n}"]}